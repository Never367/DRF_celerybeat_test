services:
  db:
    image: postgres:latest
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", 'sh -c "pg_isready -U postgres"']
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
  celery:
    build: .
    command: celery -A core worker -l info
    volumes:
      - .:/app
    healthcheck:
      test: celery -A core status
      interval: 10s
      timeout: 10s
      retries: 10
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
  celery-beat:
    build: .
    command: >
      bash -c "celery -A core call currency.tasks.fetch_currency_rates 
      && celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery:
        condition: service_healthy
  web:
    build: .
    command: >
      bash -c "python manage.py migrate 
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s